/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.oyo.metadata;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2019-02-23")
public class TPackageDuration implements org.apache.thrift.TBase<TPackageDuration, TPackageDuration._Fields>, java.io.Serializable, Cloneable, Comparable<TPackageDuration> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TPackageDuration");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField DISPLAY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("displayName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField MIN_NUMBER_OF_DAYS_FIELD_DESC = new org.apache.thrift.protocol.TField("minNumberOfDays", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField MAX_NUMBER_OF_DAYS_FIELD_DESC = new org.apache.thrift.protocol.TField("maxNumberOfDays", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField SEQUENCE_FIELD_DESC = new org.apache.thrift.protocol.TField("sequence", org.apache.thrift.protocol.TType.I32, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TPackageDurationStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TPackageDurationTupleSchemeFactory();

  private java.lang.String id; // required
  private java.lang.String displayName; // required
  private int minNumberOfDays; // required
  private int maxNumberOfDays; // required
  private int sequence; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    DISPLAY_NAME((short)2, "displayName"),
    MIN_NUMBER_OF_DAYS((short)3, "minNumberOfDays"),
    MAX_NUMBER_OF_DAYS((short)4, "maxNumberOfDays"),
    SEQUENCE((short)5, "sequence");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // DISPLAY_NAME
          return DISPLAY_NAME;
        case 3: // MIN_NUMBER_OF_DAYS
          return MIN_NUMBER_OF_DAYS;
        case 4: // MAX_NUMBER_OF_DAYS
          return MAX_NUMBER_OF_DAYS;
        case 5: // SEQUENCE
          return SEQUENCE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __MINNUMBEROFDAYS_ISSET_ID = 0;
  private static final int __MAXNUMBEROFDAYS_ISSET_ID = 1;
  private static final int __SEQUENCE_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISPLAY_NAME, new org.apache.thrift.meta_data.FieldMetaData("displayName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MIN_NUMBER_OF_DAYS, new org.apache.thrift.meta_data.FieldMetaData("minNumberOfDays", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MAX_NUMBER_OF_DAYS, new org.apache.thrift.meta_data.FieldMetaData("maxNumberOfDays", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SEQUENCE, new org.apache.thrift.meta_data.FieldMetaData("sequence", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TPackageDuration.class, metaDataMap);
  }

  public TPackageDuration() {
  }

  public TPackageDuration(
    java.lang.String id,
    java.lang.String displayName,
    int minNumberOfDays,
    int maxNumberOfDays,
    int sequence)
  {
    this();
    this.id = id;
    this.displayName = displayName;
    this.minNumberOfDays = minNumberOfDays;
    setMinNumberOfDaysIsSet(true);
    this.maxNumberOfDays = maxNumberOfDays;
    setMaxNumberOfDaysIsSet(true);
    this.sequence = sequence;
    setSequenceIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TPackageDuration(TPackageDuration other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetId()) {
      this.id = other.id;
    }
    if (other.isSetDisplayName()) {
      this.displayName = other.displayName;
    }
    this.minNumberOfDays = other.minNumberOfDays;
    this.maxNumberOfDays = other.maxNumberOfDays;
    this.sequence = other.sequence;
  }

  public TPackageDuration deepCopy() {
    return new TPackageDuration(this);
  }

  @Override
  public void clear() {
    this.id = null;
    this.displayName = null;
    setMinNumberOfDaysIsSet(false);
    this.minNumberOfDays = 0;
    setMaxNumberOfDaysIsSet(false);
    this.maxNumberOfDays = 0;
    setSequenceIsSet(false);
    this.sequence = 0;
  }

  public java.lang.String getId() {
    return this.id;
  }

  public void setId(java.lang.String id) {
    this.id = id;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  public java.lang.String getDisplayName() {
    return this.displayName;
  }

  public void setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
  }

  public void unsetDisplayName() {
    this.displayName = null;
  }

  /** Returns true if field displayName is set (has been assigned a value) and false otherwise */
  public boolean isSetDisplayName() {
    return this.displayName != null;
  }

  public void setDisplayNameIsSet(boolean value) {
    if (!value) {
      this.displayName = null;
    }
  }

  public int getMinNumberOfDays() {
    return this.minNumberOfDays;
  }

  public void setMinNumberOfDays(int minNumberOfDays) {
    this.minNumberOfDays = minNumberOfDays;
    setMinNumberOfDaysIsSet(true);
  }

  public void unsetMinNumberOfDays() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MINNUMBEROFDAYS_ISSET_ID);
  }

  /** Returns true if field minNumberOfDays is set (has been assigned a value) and false otherwise */
  public boolean isSetMinNumberOfDays() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MINNUMBEROFDAYS_ISSET_ID);
  }

  public void setMinNumberOfDaysIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MINNUMBEROFDAYS_ISSET_ID, value);
  }

  public int getMaxNumberOfDays() {
    return this.maxNumberOfDays;
  }

  public void setMaxNumberOfDays(int maxNumberOfDays) {
    this.maxNumberOfDays = maxNumberOfDays;
    setMaxNumberOfDaysIsSet(true);
  }

  public void unsetMaxNumberOfDays() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MAXNUMBEROFDAYS_ISSET_ID);
  }

  /** Returns true if field maxNumberOfDays is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxNumberOfDays() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MAXNUMBEROFDAYS_ISSET_ID);
  }

  public void setMaxNumberOfDaysIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MAXNUMBEROFDAYS_ISSET_ID, value);
  }

  public int getSequence() {
    return this.sequence;
  }

  public void setSequence(int sequence) {
    this.sequence = sequence;
    setSequenceIsSet(true);
  }

  public void unsetSequence() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SEQUENCE_ISSET_ID);
  }

  /** Returns true if field sequence is set (has been assigned a value) and false otherwise */
  public boolean isSetSequence() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SEQUENCE_ISSET_ID);
  }

  public void setSequenceIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SEQUENCE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.String)value);
      }
      break;

    case DISPLAY_NAME:
      if (value == null) {
        unsetDisplayName();
      } else {
        setDisplayName((java.lang.String)value);
      }
      break;

    case MIN_NUMBER_OF_DAYS:
      if (value == null) {
        unsetMinNumberOfDays();
      } else {
        setMinNumberOfDays((java.lang.Integer)value);
      }
      break;

    case MAX_NUMBER_OF_DAYS:
      if (value == null) {
        unsetMaxNumberOfDays();
      } else {
        setMaxNumberOfDays((java.lang.Integer)value);
      }
      break;

    case SEQUENCE:
      if (value == null) {
        unsetSequence();
      } else {
        setSequence((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case DISPLAY_NAME:
      return getDisplayName();

    case MIN_NUMBER_OF_DAYS:
      return getMinNumberOfDays();

    case MAX_NUMBER_OF_DAYS:
      return getMaxNumberOfDays();

    case SEQUENCE:
      return getSequence();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case DISPLAY_NAME:
      return isSetDisplayName();
    case MIN_NUMBER_OF_DAYS:
      return isSetMinNumberOfDays();
    case MAX_NUMBER_OF_DAYS:
      return isSetMaxNumberOfDays();
    case SEQUENCE:
      return isSetSequence();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof TPackageDuration)
      return this.equals((TPackageDuration)that);
    return false;
  }

  public boolean equals(TPackageDuration that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_displayName = true && this.isSetDisplayName();
    boolean that_present_displayName = true && that.isSetDisplayName();
    if (this_present_displayName || that_present_displayName) {
      if (!(this_present_displayName && that_present_displayName))
        return false;
      if (!this.displayName.equals(that.displayName))
        return false;
    }

    boolean this_present_minNumberOfDays = true;
    boolean that_present_minNumberOfDays = true;
    if (this_present_minNumberOfDays || that_present_minNumberOfDays) {
      if (!(this_present_minNumberOfDays && that_present_minNumberOfDays))
        return false;
      if (this.minNumberOfDays != that.minNumberOfDays)
        return false;
    }

    boolean this_present_maxNumberOfDays = true;
    boolean that_present_maxNumberOfDays = true;
    if (this_present_maxNumberOfDays || that_present_maxNumberOfDays) {
      if (!(this_present_maxNumberOfDays && that_present_maxNumberOfDays))
        return false;
      if (this.maxNumberOfDays != that.maxNumberOfDays)
        return false;
    }

    boolean this_present_sequence = true;
    boolean that_present_sequence = true;
    if (this_present_sequence || that_present_sequence) {
      if (!(this_present_sequence && that_present_sequence))
        return false;
      if (this.sequence != that.sequence)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id.hashCode();

    hashCode = hashCode * 8191 + ((isSetDisplayName()) ? 131071 : 524287);
    if (isSetDisplayName())
      hashCode = hashCode * 8191 + displayName.hashCode();

    hashCode = hashCode * 8191 + minNumberOfDays;

    hashCode = hashCode * 8191 + maxNumberOfDays;

    hashCode = hashCode * 8191 + sequence;

    return hashCode;
  }

  @Override
  public int compareTo(TPackageDuration other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDisplayName()).compareTo(other.isSetDisplayName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplayName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.displayName, other.displayName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMinNumberOfDays()).compareTo(other.isSetMinNumberOfDays());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMinNumberOfDays()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.minNumberOfDays, other.minNumberOfDays);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMaxNumberOfDays()).compareTo(other.isSetMaxNumberOfDays());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxNumberOfDays()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxNumberOfDays, other.maxNumberOfDays);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSequence()).compareTo(other.isSetSequence());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSequence()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sequence, other.sequence);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TPackageDuration(");
    boolean first = true;

    sb.append("id:");
    if (this.id == null) {
      sb.append("null");
    } else {
      sb.append(this.id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("displayName:");
    if (this.displayName == null) {
      sb.append("null");
    } else {
      sb.append(this.displayName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("minNumberOfDays:");
    sb.append(this.minNumberOfDays);
    first = false;
    if (!first) sb.append(", ");
    sb.append("maxNumberOfDays:");
    sb.append(this.maxNumberOfDays);
    first = false;
    if (!first) sb.append(", ");
    sb.append("sequence:");
    sb.append(this.sequence);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TPackageDurationStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TPackageDurationStandardScheme getScheme() {
      return new TPackageDurationStandardScheme();
    }
  }

  private static class TPackageDurationStandardScheme extends org.apache.thrift.scheme.StandardScheme<TPackageDuration> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TPackageDuration struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DISPLAY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.displayName = iprot.readString();
              struct.setDisplayNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MIN_NUMBER_OF_DAYS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.minNumberOfDays = iprot.readI32();
              struct.setMinNumberOfDaysIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MAX_NUMBER_OF_DAYS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.maxNumberOfDays = iprot.readI32();
              struct.setMaxNumberOfDaysIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SEQUENCE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sequence = iprot.readI32();
              struct.setSequenceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TPackageDuration struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.id != null) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeString(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.displayName != null) {
        oprot.writeFieldBegin(DISPLAY_NAME_FIELD_DESC);
        oprot.writeString(struct.displayName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(MIN_NUMBER_OF_DAYS_FIELD_DESC);
      oprot.writeI32(struct.minNumberOfDays);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MAX_NUMBER_OF_DAYS_FIELD_DESC);
      oprot.writeI32(struct.maxNumberOfDays);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SEQUENCE_FIELD_DESC);
      oprot.writeI32(struct.sequence);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TPackageDurationTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TPackageDurationTupleScheme getScheme() {
      return new TPackageDurationTupleScheme();
    }
  }

  private static class TPackageDurationTupleScheme extends org.apache.thrift.scheme.TupleScheme<TPackageDuration> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TPackageDuration struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetDisplayName()) {
        optionals.set(1);
      }
      if (struct.isSetMinNumberOfDays()) {
        optionals.set(2);
      }
      if (struct.isSetMaxNumberOfDays()) {
        optionals.set(3);
      }
      if (struct.isSetSequence()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetId()) {
        oprot.writeString(struct.id);
      }
      if (struct.isSetDisplayName()) {
        oprot.writeString(struct.displayName);
      }
      if (struct.isSetMinNumberOfDays()) {
        oprot.writeI32(struct.minNumberOfDays);
      }
      if (struct.isSetMaxNumberOfDays()) {
        oprot.writeI32(struct.maxNumberOfDays);
      }
      if (struct.isSetSequence()) {
        oprot.writeI32(struct.sequence);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TPackageDuration struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.id = iprot.readString();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.displayName = iprot.readString();
        struct.setDisplayNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.minNumberOfDays = iprot.readI32();
        struct.setMinNumberOfDaysIsSet(true);
      }
      if (incoming.get(3)) {
        struct.maxNumberOfDays = iprot.readI32();
        struct.setMaxNumberOfDaysIsSet(true);
      }
      if (incoming.get(4)) {
        struct.sequence = iprot.readI32();
        struct.setSequenceIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

