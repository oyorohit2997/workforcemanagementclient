/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.oyo.workforce;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2019-02-26")
public class TGetLevelInfoResponse implements org.apache.thrift.TBase<TGetLevelInfoResponse, TGetLevelInfoResponse._Fields>, java.io.Serializable, Cloneable, Comparable<TGetLevelInfoResponse> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TGetLevelInfoResponse");

  private static final org.apache.thrift.protocol.TField LEVEL1_FIELD_DESC = new org.apache.thrift.protocol.TField("level1", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField LEVEL2_FIELD_DESC = new org.apache.thrift.protocol.TField("level2", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField LEVEL3_FIELD_DESC = new org.apache.thrift.protocol.TField("level3", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField LEVEL4_FIELD_DESC = new org.apache.thrift.protocol.TField("level4", org.apache.thrift.protocol.TType.STRING, (short)4);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TGetLevelInfoResponseStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TGetLevelInfoResponseTupleSchemeFactory();

  private java.lang.String level1; // required
  private java.lang.String level2; // required
  private java.lang.String level3; // required
  private java.lang.String level4; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    LEVEL1((short)1, "level1"),
    LEVEL2((short)2, "level2"),
    LEVEL3((short)3, "level3"),
    LEVEL4((short)4, "level4");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // LEVEL1
          return LEVEL1;
        case 2: // LEVEL2
          return LEVEL2;
        case 3: // LEVEL3
          return LEVEL3;
        case 4: // LEVEL4
          return LEVEL4;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.LEVEL1, new org.apache.thrift.meta_data.FieldMetaData("level1", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LEVEL2, new org.apache.thrift.meta_data.FieldMetaData("level2", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LEVEL3, new org.apache.thrift.meta_data.FieldMetaData("level3", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LEVEL4, new org.apache.thrift.meta_data.FieldMetaData("level4", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TGetLevelInfoResponse.class, metaDataMap);
  }

  public TGetLevelInfoResponse() {
  }

  public TGetLevelInfoResponse(
    java.lang.String level1,
    java.lang.String level2,
    java.lang.String level3,
    java.lang.String level4)
  {
    this();
    this.level1 = level1;
    this.level2 = level2;
    this.level3 = level3;
    this.level4 = level4;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TGetLevelInfoResponse(TGetLevelInfoResponse other) {
    if (other.isSetLevel1()) {
      this.level1 = other.level1;
    }
    if (other.isSetLevel2()) {
      this.level2 = other.level2;
    }
    if (other.isSetLevel3()) {
      this.level3 = other.level3;
    }
    if (other.isSetLevel4()) {
      this.level4 = other.level4;
    }
  }

  public TGetLevelInfoResponse deepCopy() {
    return new TGetLevelInfoResponse(this);
  }

  @Override
  public void clear() {
    this.level1 = null;
    this.level2 = null;
    this.level3 = null;
    this.level4 = null;
  }

  public java.lang.String getLevel1() {
    return this.level1;
  }

  public void setLevel1(java.lang.String level1) {
    this.level1 = level1;
  }

  public void unsetLevel1() {
    this.level1 = null;
  }

  /** Returns true if field level1 is set (has been assigned a value) and false otherwise */
  public boolean isSetLevel1() {
    return this.level1 != null;
  }

  public void setLevel1IsSet(boolean value) {
    if (!value) {
      this.level1 = null;
    }
  }

  public java.lang.String getLevel2() {
    return this.level2;
  }

  public void setLevel2(java.lang.String level2) {
    this.level2 = level2;
  }

  public void unsetLevel2() {
    this.level2 = null;
  }

  /** Returns true if field level2 is set (has been assigned a value) and false otherwise */
  public boolean isSetLevel2() {
    return this.level2 != null;
  }

  public void setLevel2IsSet(boolean value) {
    if (!value) {
      this.level2 = null;
    }
  }

  public java.lang.String getLevel3() {
    return this.level3;
  }

  public void setLevel3(java.lang.String level3) {
    this.level3 = level3;
  }

  public void unsetLevel3() {
    this.level3 = null;
  }

  /** Returns true if field level3 is set (has been assigned a value) and false otherwise */
  public boolean isSetLevel3() {
    return this.level3 != null;
  }

  public void setLevel3IsSet(boolean value) {
    if (!value) {
      this.level3 = null;
    }
  }

  public java.lang.String getLevel4() {
    return this.level4;
  }

  public void setLevel4(java.lang.String level4) {
    this.level4 = level4;
  }

  public void unsetLevel4() {
    this.level4 = null;
  }

  /** Returns true if field level4 is set (has been assigned a value) and false otherwise */
  public boolean isSetLevel4() {
    return this.level4 != null;
  }

  public void setLevel4IsSet(boolean value) {
    if (!value) {
      this.level4 = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case LEVEL1:
      if (value == null) {
        unsetLevel1();
      } else {
        setLevel1((java.lang.String)value);
      }
      break;

    case LEVEL2:
      if (value == null) {
        unsetLevel2();
      } else {
        setLevel2((java.lang.String)value);
      }
      break;

    case LEVEL3:
      if (value == null) {
        unsetLevel3();
      } else {
        setLevel3((java.lang.String)value);
      }
      break;

    case LEVEL4:
      if (value == null) {
        unsetLevel4();
      } else {
        setLevel4((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case LEVEL1:
      return getLevel1();

    case LEVEL2:
      return getLevel2();

    case LEVEL3:
      return getLevel3();

    case LEVEL4:
      return getLevel4();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case LEVEL1:
      return isSetLevel1();
    case LEVEL2:
      return isSetLevel2();
    case LEVEL3:
      return isSetLevel3();
    case LEVEL4:
      return isSetLevel4();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof TGetLevelInfoResponse)
      return this.equals((TGetLevelInfoResponse)that);
    return false;
  }

  public boolean equals(TGetLevelInfoResponse that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_level1 = true && this.isSetLevel1();
    boolean that_present_level1 = true && that.isSetLevel1();
    if (this_present_level1 || that_present_level1) {
      if (!(this_present_level1 && that_present_level1))
        return false;
      if (!this.level1.equals(that.level1))
        return false;
    }

    boolean this_present_level2 = true && this.isSetLevel2();
    boolean that_present_level2 = true && that.isSetLevel2();
    if (this_present_level2 || that_present_level2) {
      if (!(this_present_level2 && that_present_level2))
        return false;
      if (!this.level2.equals(that.level2))
        return false;
    }

    boolean this_present_level3 = true && this.isSetLevel3();
    boolean that_present_level3 = true && that.isSetLevel3();
    if (this_present_level3 || that_present_level3) {
      if (!(this_present_level3 && that_present_level3))
        return false;
      if (!this.level3.equals(that.level3))
        return false;
    }

    boolean this_present_level4 = true && this.isSetLevel4();
    boolean that_present_level4 = true && that.isSetLevel4();
    if (this_present_level4 || that_present_level4) {
      if (!(this_present_level4 && that_present_level4))
        return false;
      if (!this.level4.equals(that.level4))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetLevel1()) ? 131071 : 524287);
    if (isSetLevel1())
      hashCode = hashCode * 8191 + level1.hashCode();

    hashCode = hashCode * 8191 + ((isSetLevel2()) ? 131071 : 524287);
    if (isSetLevel2())
      hashCode = hashCode * 8191 + level2.hashCode();

    hashCode = hashCode * 8191 + ((isSetLevel3()) ? 131071 : 524287);
    if (isSetLevel3())
      hashCode = hashCode * 8191 + level3.hashCode();

    hashCode = hashCode * 8191 + ((isSetLevel4()) ? 131071 : 524287);
    if (isSetLevel4())
      hashCode = hashCode * 8191 + level4.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TGetLevelInfoResponse other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetLevel1()).compareTo(other.isSetLevel1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLevel1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.level1, other.level1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLevel2()).compareTo(other.isSetLevel2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLevel2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.level2, other.level2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLevel3()).compareTo(other.isSetLevel3());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLevel3()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.level3, other.level3);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLevel4()).compareTo(other.isSetLevel4());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLevel4()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.level4, other.level4);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TGetLevelInfoResponse(");
    boolean first = true;

    sb.append("level1:");
    if (this.level1 == null) {
      sb.append("null");
    } else {
      sb.append(this.level1);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("level2:");
    if (this.level2 == null) {
      sb.append("null");
    } else {
      sb.append(this.level2);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("level3:");
    if (this.level3 == null) {
      sb.append("null");
    } else {
      sb.append(this.level3);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("level4:");
    if (this.level4 == null) {
      sb.append("null");
    } else {
      sb.append(this.level4);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSetLevel1()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'level1' is unset! Struct:" + toString());
    }

    if (!isSetLevel2()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'level2' is unset! Struct:" + toString());
    }

    if (!isSetLevel3()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'level3' is unset! Struct:" + toString());
    }

    if (!isSetLevel4()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'level4' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TGetLevelInfoResponseStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TGetLevelInfoResponseStandardScheme getScheme() {
      return new TGetLevelInfoResponseStandardScheme();
    }
  }

  private static class TGetLevelInfoResponseStandardScheme extends org.apache.thrift.scheme.StandardScheme<TGetLevelInfoResponse> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TGetLevelInfoResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // LEVEL1
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.level1 = iprot.readString();
              struct.setLevel1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // LEVEL2
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.level2 = iprot.readString();
              struct.setLevel2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // LEVEL3
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.level3 = iprot.readString();
              struct.setLevel3IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // LEVEL4
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.level4 = iprot.readString();
              struct.setLevel4IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TGetLevelInfoResponse struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.level1 != null) {
        oprot.writeFieldBegin(LEVEL1_FIELD_DESC);
        oprot.writeString(struct.level1);
        oprot.writeFieldEnd();
      }
      if (struct.level2 != null) {
        oprot.writeFieldBegin(LEVEL2_FIELD_DESC);
        oprot.writeString(struct.level2);
        oprot.writeFieldEnd();
      }
      if (struct.level3 != null) {
        oprot.writeFieldBegin(LEVEL3_FIELD_DESC);
        oprot.writeString(struct.level3);
        oprot.writeFieldEnd();
      }
      if (struct.level4 != null) {
        oprot.writeFieldBegin(LEVEL4_FIELD_DESC);
        oprot.writeString(struct.level4);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TGetLevelInfoResponseTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TGetLevelInfoResponseTupleScheme getScheme() {
      return new TGetLevelInfoResponseTupleScheme();
    }
  }

  private static class TGetLevelInfoResponseTupleScheme extends org.apache.thrift.scheme.TupleScheme<TGetLevelInfoResponse> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TGetLevelInfoResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeString(struct.level1);
      oprot.writeString(struct.level2);
      oprot.writeString(struct.level3);
      oprot.writeString(struct.level4);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TGetLevelInfoResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.level1 = iprot.readString();
      struct.setLevel1IsSet(true);
      struct.level2 = iprot.readString();
      struct.setLevel2IsSet(true);
      struct.level3 = iprot.readString();
      struct.setLevel3IsSet(true);
      struct.level4 = iprot.readString();
      struct.setLevel4IsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

