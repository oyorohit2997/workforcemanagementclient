/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.oyo.mm.channel.accountmanagement;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2019-05-22")
public class TAccountObject implements org.apache.thrift.TBase<TAccountObject, TAccountObject._Fields>, java.io.Serializable, Cloneable, Comparable<TAccountObject> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TAccountObject");

  private static final org.apache.thrift.protocol.TField ACCOUNT_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("accountCode", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField COUNTRY_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("countryCode", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField ENTITY_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("entityType", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField ACCOUNT_DATA_FIELD_DESC = new org.apache.thrift.protocol.TField("accountData", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ONBOARDING_DATA_FIELD_DESC = new org.apache.thrift.protocol.TField("onboardingData", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField CREATED_AT_FIELD_DESC = new org.apache.thrift.protocol.TField("createdAt", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField UPDATED_AT_FIELD_DESC = new org.apache.thrift.protocol.TField("updatedAt", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("version", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField ACCOUNT_CONFIG_FIELD_DESC = new org.apache.thrift.protocol.TField("accountConfig", org.apache.thrift.protocol.TType.STRUCT, (short)11);
  private static final org.apache.thrift.protocol.TField EXTERNAL_ID_OBJECT_FIELD_DESC = new org.apache.thrift.protocol.TField("externalIdObject", org.apache.thrift.protocol.TType.STRUCT, (short)12);
  private static final org.apache.thrift.protocol.TField CREATED_BY_FIELD_DESC = new org.apache.thrift.protocol.TField("createdBy", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField UPDATED_BY_FIELD_DESC = new org.apache.thrift.protocol.TField("updatedBy", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField DOCUMENT_DETAILS_FIELD_DESC = new org.apache.thrift.protocol.TField("documentDetails", org.apache.thrift.protocol.TType.MAP, (short)15);
  private static final org.apache.thrift.protocol.TField SELF_SIGN_UP_FIELD_DESC = new org.apache.thrift.protocol.TField("selfSignUp", org.apache.thrift.protocol.TType.BOOL, (short)16);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)17);
  private static final org.apache.thrift.protocol.TField ONBOARD_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("onboardStatus", org.apache.thrift.protocol.TType.MAP, (short)18);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TAccountObjectStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TAccountObjectTupleSchemeFactory();

  private java.lang.String accountCode; // required
  private TCountryCode countryCode; // required
  private TEntityType entityType; // required
  private java.lang.String accountData; // required
  private java.lang.String onboardingData; // optional
  private java.lang.String name; // required
  private long createdAt; // required
  private long updatedAt; // required
  private java.lang.String id; // required
  private long version; // required
  private TAccountConfig accountConfig; // optional
  private TExternalIdObject externalIdObject; // required
  private java.lang.String createdBy; // required
  private java.lang.String updatedBy; // required
  private java.util.Map<java.lang.String,java.lang.String> documentDetails; // optional
  private boolean selfSignUp; // optional
  private TAccountStatus status; // required
  private java.util.Map<java.lang.String,java.lang.String> onboardStatus; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ACCOUNT_CODE((short)1, "accountCode"),
    /**
     * 
     * @see TCountryCode
     */
    COUNTRY_CODE((short)2, "countryCode"),
    /**
     * 
     * @see TEntityType
     */
    ENTITY_TYPE((short)3, "entityType"),
    ACCOUNT_DATA((short)4, "accountData"),
    ONBOARDING_DATA((short)5, "onboardingData"),
    NAME((short)6, "name"),
    CREATED_AT((short)7, "createdAt"),
    UPDATED_AT((short)8, "updatedAt"),
    ID((short)9, "id"),
    VERSION((short)10, "version"),
    ACCOUNT_CONFIG((short)11, "accountConfig"),
    EXTERNAL_ID_OBJECT((short)12, "externalIdObject"),
    CREATED_BY((short)13, "createdBy"),
    UPDATED_BY((short)14, "updatedBy"),
    DOCUMENT_DETAILS((short)15, "documentDetails"),
    SELF_SIGN_UP((short)16, "selfSignUp"),
    /**
     * 
     * @see TAccountStatus
     */
    STATUS((short)17, "status"),
    ONBOARD_STATUS((short)18, "onboardStatus");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ACCOUNT_CODE
          return ACCOUNT_CODE;
        case 2: // COUNTRY_CODE
          return COUNTRY_CODE;
        case 3: // ENTITY_TYPE
          return ENTITY_TYPE;
        case 4: // ACCOUNT_DATA
          return ACCOUNT_DATA;
        case 5: // ONBOARDING_DATA
          return ONBOARDING_DATA;
        case 6: // NAME
          return NAME;
        case 7: // CREATED_AT
          return CREATED_AT;
        case 8: // UPDATED_AT
          return UPDATED_AT;
        case 9: // ID
          return ID;
        case 10: // VERSION
          return VERSION;
        case 11: // ACCOUNT_CONFIG
          return ACCOUNT_CONFIG;
        case 12: // EXTERNAL_ID_OBJECT
          return EXTERNAL_ID_OBJECT;
        case 13: // CREATED_BY
          return CREATED_BY;
        case 14: // UPDATED_BY
          return UPDATED_BY;
        case 15: // DOCUMENT_DETAILS
          return DOCUMENT_DETAILS;
        case 16: // SELF_SIGN_UP
          return SELF_SIGN_UP;
        case 17: // STATUS
          return STATUS;
        case 18: // ONBOARD_STATUS
          return ONBOARD_STATUS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CREATEDAT_ISSET_ID = 0;
  private static final int __UPDATEDAT_ISSET_ID = 1;
  private static final int __VERSION_ISSET_ID = 2;
  private static final int __SELFSIGNUP_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ONBOARDING_DATA,_Fields.ACCOUNT_CONFIG,_Fields.DOCUMENT_DETAILS,_Fields.SELF_SIGN_UP,_Fields.ONBOARD_STATUS};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ACCOUNT_CODE, new org.apache.thrift.meta_data.FieldMetaData("accountCode", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COUNTRY_CODE, new org.apache.thrift.meta_data.FieldMetaData("countryCode", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, TCountryCode.class)));
    tmpMap.put(_Fields.ENTITY_TYPE, new org.apache.thrift.meta_data.FieldMetaData("entityType", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, TEntityType.class)));
    tmpMap.put(_Fields.ACCOUNT_DATA, new org.apache.thrift.meta_data.FieldMetaData("accountData", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ONBOARDING_DATA, new org.apache.thrift.meta_data.FieldMetaData("onboardingData", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATED_AT, new org.apache.thrift.meta_data.FieldMetaData("createdAt", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.UPDATED_AT, new org.apache.thrift.meta_data.FieldMetaData("updatedAt", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VERSION, new org.apache.thrift.meta_data.FieldMetaData("version", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ACCOUNT_CONFIG, new org.apache.thrift.meta_data.FieldMetaData("accountConfig", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TAccountConfig.class)));
    tmpMap.put(_Fields.EXTERNAL_ID_OBJECT, new org.apache.thrift.meta_data.FieldMetaData("externalIdObject", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TExternalIdObject.class)));
    tmpMap.put(_Fields.CREATED_BY, new org.apache.thrift.meta_data.FieldMetaData("createdBy", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATED_BY, new org.apache.thrift.meta_data.FieldMetaData("updatedBy", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DOCUMENT_DETAILS, new org.apache.thrift.meta_data.FieldMetaData("documentDetails", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.SELF_SIGN_UP, new org.apache.thrift.meta_data.FieldMetaData("selfSignUp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, TAccountStatus.class)));
    tmpMap.put(_Fields.ONBOARD_STATUS, new org.apache.thrift.meta_data.FieldMetaData("onboardStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TAccountObject.class, metaDataMap);
  }

  public TAccountObject() {
  }

  public TAccountObject(
    java.lang.String accountCode,
    TCountryCode countryCode,
    TEntityType entityType,
    java.lang.String accountData,
    java.lang.String name,
    long createdAt,
    long updatedAt,
    java.lang.String id,
    long version,
    TExternalIdObject externalIdObject,
    java.lang.String createdBy,
    java.lang.String updatedBy,
    TAccountStatus status)
  {
    this();
    this.accountCode = accountCode;
    this.countryCode = countryCode;
    this.entityType = entityType;
    this.accountData = accountData;
    this.name = name;
    this.createdAt = createdAt;
    setCreatedAtIsSet(true);
    this.updatedAt = updatedAt;
    setUpdatedAtIsSet(true);
    this.id = id;
    this.version = version;
    setVersionIsSet(true);
    this.externalIdObject = externalIdObject;
    this.createdBy = createdBy;
    this.updatedBy = updatedBy;
    this.status = status;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TAccountObject(TAccountObject other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetAccountCode()) {
      this.accountCode = other.accountCode;
    }
    if (other.isSetCountryCode()) {
      this.countryCode = other.countryCode;
    }
    if (other.isSetEntityType()) {
      this.entityType = other.entityType;
    }
    if (other.isSetAccountData()) {
      this.accountData = other.accountData;
    }
    if (other.isSetOnboardingData()) {
      this.onboardingData = other.onboardingData;
    }
    if (other.isSetName()) {
      this.name = other.name;
    }
    this.createdAt = other.createdAt;
    this.updatedAt = other.updatedAt;
    if (other.isSetId()) {
      this.id = other.id;
    }
    this.version = other.version;
    if (other.isSetAccountConfig()) {
      this.accountConfig = new TAccountConfig(other.accountConfig);
    }
    if (other.isSetExternalIdObject()) {
      this.externalIdObject = new TExternalIdObject(other.externalIdObject);
    }
    if (other.isSetCreatedBy()) {
      this.createdBy = other.createdBy;
    }
    if (other.isSetUpdatedBy()) {
      this.updatedBy = other.updatedBy;
    }
    if (other.isSetDocumentDetails()) {
      java.util.Map<java.lang.String,java.lang.String> __this__documentDetails = new java.util.HashMap<java.lang.String,java.lang.String>(other.documentDetails);
      this.documentDetails = __this__documentDetails;
    }
    this.selfSignUp = other.selfSignUp;
    if (other.isSetStatus()) {
      this.status = other.status;
    }
    if (other.isSetOnboardStatus()) {
      java.util.Map<java.lang.String,java.lang.String> __this__onboardStatus = new java.util.HashMap<java.lang.String,java.lang.String>(other.onboardStatus);
      this.onboardStatus = __this__onboardStatus;
    }
  }

  public TAccountObject deepCopy() {
    return new TAccountObject(this);
  }

  @Override
  public void clear() {
    this.accountCode = null;
    this.countryCode = null;
    this.entityType = null;
    this.accountData = null;
    this.onboardingData = null;
    this.name = null;
    setCreatedAtIsSet(false);
    this.createdAt = 0;
    setUpdatedAtIsSet(false);
    this.updatedAt = 0;
    this.id = null;
    setVersionIsSet(false);
    this.version = 0;
    this.accountConfig = null;
    this.externalIdObject = null;
    this.createdBy = null;
    this.updatedBy = null;
    this.documentDetails = null;
    setSelfSignUpIsSet(false);
    this.selfSignUp = false;
    this.status = null;
    this.onboardStatus = null;
  }

  public java.lang.String getAccountCode() {
    return this.accountCode;
  }

  public void setAccountCode(java.lang.String accountCode) {
    this.accountCode = accountCode;
  }

  public void unsetAccountCode() {
    this.accountCode = null;
  }

  /** Returns true if field accountCode is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountCode() {
    return this.accountCode != null;
  }

  public void setAccountCodeIsSet(boolean value) {
    if (!value) {
      this.accountCode = null;
    }
  }

  /**
   * 
   * @see TCountryCode
   */
  public TCountryCode getCountryCode() {
    return this.countryCode;
  }

  /**
   * 
   * @see TCountryCode
   */
  public void setCountryCode(TCountryCode countryCode) {
    this.countryCode = countryCode;
  }

  public void unsetCountryCode() {
    this.countryCode = null;
  }

  /** Returns true if field countryCode is set (has been assigned a value) and false otherwise */
  public boolean isSetCountryCode() {
    return this.countryCode != null;
  }

  public void setCountryCodeIsSet(boolean value) {
    if (!value) {
      this.countryCode = null;
    }
  }

  /**
   * 
   * @see TEntityType
   */
  public TEntityType getEntityType() {
    return this.entityType;
  }

  /**
   * 
   * @see TEntityType
   */
  public void setEntityType(TEntityType entityType) {
    this.entityType = entityType;
  }

  public void unsetEntityType() {
    this.entityType = null;
  }

  /** Returns true if field entityType is set (has been assigned a value) and false otherwise */
  public boolean isSetEntityType() {
    return this.entityType != null;
  }

  public void setEntityTypeIsSet(boolean value) {
    if (!value) {
      this.entityType = null;
    }
  }

  public java.lang.String getAccountData() {
    return this.accountData;
  }

  public void setAccountData(java.lang.String accountData) {
    this.accountData = accountData;
  }

  public void unsetAccountData() {
    this.accountData = null;
  }

  /** Returns true if field accountData is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountData() {
    return this.accountData != null;
  }

  public void setAccountDataIsSet(boolean value) {
    if (!value) {
      this.accountData = null;
    }
  }

  public java.lang.String getOnboardingData() {
    return this.onboardingData;
  }

  public void setOnboardingData(java.lang.String onboardingData) {
    this.onboardingData = onboardingData;
  }

  public void unsetOnboardingData() {
    this.onboardingData = null;
  }

  /** Returns true if field onboardingData is set (has been assigned a value) and false otherwise */
  public boolean isSetOnboardingData() {
    return this.onboardingData != null;
  }

  public void setOnboardingDataIsSet(boolean value) {
    if (!value) {
      this.onboardingData = null;
    }
  }

  public java.lang.String getName() {
    return this.name;
  }

  public void setName(java.lang.String name) {
    this.name = name;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public long getCreatedAt() {
    return this.createdAt;
  }

  public void setCreatedAt(long createdAt) {
    this.createdAt = createdAt;
    setCreatedAtIsSet(true);
  }

  public void unsetCreatedAt() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CREATEDAT_ISSET_ID);
  }

  /** Returns true if field createdAt is set (has been assigned a value) and false otherwise */
  public boolean isSetCreatedAt() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CREATEDAT_ISSET_ID);
  }

  public void setCreatedAtIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CREATEDAT_ISSET_ID, value);
  }

  public long getUpdatedAt() {
    return this.updatedAt;
  }

  public void setUpdatedAt(long updatedAt) {
    this.updatedAt = updatedAt;
    setUpdatedAtIsSet(true);
  }

  public void unsetUpdatedAt() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __UPDATEDAT_ISSET_ID);
  }

  /** Returns true if field updatedAt is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdatedAt() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __UPDATEDAT_ISSET_ID);
  }

  public void setUpdatedAtIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __UPDATEDAT_ISSET_ID, value);
  }

  public java.lang.String getId() {
    return this.id;
  }

  public void setId(java.lang.String id) {
    this.id = id;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  public long getVersion() {
    return this.version;
  }

  public void setVersion(long version) {
    this.version = version;
    setVersionIsSet(true);
  }

  public void unsetVersion() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __VERSION_ISSET_ID);
  }

  /** Returns true if field version is set (has been assigned a value) and false otherwise */
  public boolean isSetVersion() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __VERSION_ISSET_ID);
  }

  public void setVersionIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __VERSION_ISSET_ID, value);
  }

  public TAccountConfig getAccountConfig() {
    return this.accountConfig;
  }

  public void setAccountConfig(TAccountConfig accountConfig) {
    this.accountConfig = accountConfig;
  }

  public void unsetAccountConfig() {
    this.accountConfig = null;
  }

  /** Returns true if field accountConfig is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountConfig() {
    return this.accountConfig != null;
  }

  public void setAccountConfigIsSet(boolean value) {
    if (!value) {
      this.accountConfig = null;
    }
  }

  public TExternalIdObject getExternalIdObject() {
    return this.externalIdObject;
  }

  public void setExternalIdObject(TExternalIdObject externalIdObject) {
    this.externalIdObject = externalIdObject;
  }

  public void unsetExternalIdObject() {
    this.externalIdObject = null;
  }

  /** Returns true if field externalIdObject is set (has been assigned a value) and false otherwise */
  public boolean isSetExternalIdObject() {
    return this.externalIdObject != null;
  }

  public void setExternalIdObjectIsSet(boolean value) {
    if (!value) {
      this.externalIdObject = null;
    }
  }

  public java.lang.String getCreatedBy() {
    return this.createdBy;
  }

  public void setCreatedBy(java.lang.String createdBy) {
    this.createdBy = createdBy;
  }

  public void unsetCreatedBy() {
    this.createdBy = null;
  }

  /** Returns true if field createdBy is set (has been assigned a value) and false otherwise */
  public boolean isSetCreatedBy() {
    return this.createdBy != null;
  }

  public void setCreatedByIsSet(boolean value) {
    if (!value) {
      this.createdBy = null;
    }
  }

  public java.lang.String getUpdatedBy() {
    return this.updatedBy;
  }

  public void setUpdatedBy(java.lang.String updatedBy) {
    this.updatedBy = updatedBy;
  }

  public void unsetUpdatedBy() {
    this.updatedBy = null;
  }

  /** Returns true if field updatedBy is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdatedBy() {
    return this.updatedBy != null;
  }

  public void setUpdatedByIsSet(boolean value) {
    if (!value) {
      this.updatedBy = null;
    }
  }

  public int getDocumentDetailsSize() {
    return (this.documentDetails == null) ? 0 : this.documentDetails.size();
  }

  public void putToDocumentDetails(java.lang.String key, java.lang.String val) {
    if (this.documentDetails == null) {
      this.documentDetails = new java.util.HashMap<java.lang.String,java.lang.String>();
    }
    this.documentDetails.put(key, val);
  }

  public java.util.Map<java.lang.String,java.lang.String> getDocumentDetails() {
    return this.documentDetails;
  }

  public void setDocumentDetails(java.util.Map<java.lang.String,java.lang.String> documentDetails) {
    this.documentDetails = documentDetails;
  }

  public void unsetDocumentDetails() {
    this.documentDetails = null;
  }

  /** Returns true if field documentDetails is set (has been assigned a value) and false otherwise */
  public boolean isSetDocumentDetails() {
    return this.documentDetails != null;
  }

  public void setDocumentDetailsIsSet(boolean value) {
    if (!value) {
      this.documentDetails = null;
    }
  }

  public boolean isSelfSignUp() {
    return this.selfSignUp;
  }

  public void setSelfSignUp(boolean selfSignUp) {
    this.selfSignUp = selfSignUp;
    setSelfSignUpIsSet(true);
  }

  public void unsetSelfSignUp() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SELFSIGNUP_ISSET_ID);
  }

  /** Returns true if field selfSignUp is set (has been assigned a value) and false otherwise */
  public boolean isSetSelfSignUp() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SELFSIGNUP_ISSET_ID);
  }

  public void setSelfSignUpIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SELFSIGNUP_ISSET_ID, value);
  }

  /**
   * 
   * @see TAccountStatus
   */
  public TAccountStatus getStatus() {
    return this.status;
  }

  /**
   * 
   * @see TAccountStatus
   */
  public void setStatus(TAccountStatus status) {
    this.status = status;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  public int getOnboardStatusSize() {
    return (this.onboardStatus == null) ? 0 : this.onboardStatus.size();
  }

  public void putToOnboardStatus(java.lang.String key, java.lang.String val) {
    if (this.onboardStatus == null) {
      this.onboardStatus = new java.util.HashMap<java.lang.String,java.lang.String>();
    }
    this.onboardStatus.put(key, val);
  }

  public java.util.Map<java.lang.String,java.lang.String> getOnboardStatus() {
    return this.onboardStatus;
  }

  public void setOnboardStatus(java.util.Map<java.lang.String,java.lang.String> onboardStatus) {
    this.onboardStatus = onboardStatus;
  }

  public void unsetOnboardStatus() {
    this.onboardStatus = null;
  }

  /** Returns true if field onboardStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetOnboardStatus() {
    return this.onboardStatus != null;
  }

  public void setOnboardStatusIsSet(boolean value) {
    if (!value) {
      this.onboardStatus = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ACCOUNT_CODE:
      if (value == null) {
        unsetAccountCode();
      } else {
        setAccountCode((java.lang.String)value);
      }
      break;

    case COUNTRY_CODE:
      if (value == null) {
        unsetCountryCode();
      } else {
        setCountryCode((TCountryCode)value);
      }
      break;

    case ENTITY_TYPE:
      if (value == null) {
        unsetEntityType();
      } else {
        setEntityType((TEntityType)value);
      }
      break;

    case ACCOUNT_DATA:
      if (value == null) {
        unsetAccountData();
      } else {
        setAccountData((java.lang.String)value);
      }
      break;

    case ONBOARDING_DATA:
      if (value == null) {
        unsetOnboardingData();
      } else {
        setOnboardingData((java.lang.String)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    case CREATED_AT:
      if (value == null) {
        unsetCreatedAt();
      } else {
        setCreatedAt((java.lang.Long)value);
      }
      break;

    case UPDATED_AT:
      if (value == null) {
        unsetUpdatedAt();
      } else {
        setUpdatedAt((java.lang.Long)value);
      }
      break;

    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.String)value);
      }
      break;

    case VERSION:
      if (value == null) {
        unsetVersion();
      } else {
        setVersion((java.lang.Long)value);
      }
      break;

    case ACCOUNT_CONFIG:
      if (value == null) {
        unsetAccountConfig();
      } else {
        setAccountConfig((TAccountConfig)value);
      }
      break;

    case EXTERNAL_ID_OBJECT:
      if (value == null) {
        unsetExternalIdObject();
      } else {
        setExternalIdObject((TExternalIdObject)value);
      }
      break;

    case CREATED_BY:
      if (value == null) {
        unsetCreatedBy();
      } else {
        setCreatedBy((java.lang.String)value);
      }
      break;

    case UPDATED_BY:
      if (value == null) {
        unsetUpdatedBy();
      } else {
        setUpdatedBy((java.lang.String)value);
      }
      break;

    case DOCUMENT_DETAILS:
      if (value == null) {
        unsetDocumentDetails();
      } else {
        setDocumentDetails((java.util.Map<java.lang.String,java.lang.String>)value);
      }
      break;

    case SELF_SIGN_UP:
      if (value == null) {
        unsetSelfSignUp();
      } else {
        setSelfSignUp((java.lang.Boolean)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((TAccountStatus)value);
      }
      break;

    case ONBOARD_STATUS:
      if (value == null) {
        unsetOnboardStatus();
      } else {
        setOnboardStatus((java.util.Map<java.lang.String,java.lang.String>)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ACCOUNT_CODE:
      return getAccountCode();

    case COUNTRY_CODE:
      return getCountryCode();

    case ENTITY_TYPE:
      return getEntityType();

    case ACCOUNT_DATA:
      return getAccountData();

    case ONBOARDING_DATA:
      return getOnboardingData();

    case NAME:
      return getName();

    case CREATED_AT:
      return getCreatedAt();

    case UPDATED_AT:
      return getUpdatedAt();

    case ID:
      return getId();

    case VERSION:
      return getVersion();

    case ACCOUNT_CONFIG:
      return getAccountConfig();

    case EXTERNAL_ID_OBJECT:
      return getExternalIdObject();

    case CREATED_BY:
      return getCreatedBy();

    case UPDATED_BY:
      return getUpdatedBy();

    case DOCUMENT_DETAILS:
      return getDocumentDetails();

    case SELF_SIGN_UP:
      return isSelfSignUp();

    case STATUS:
      return getStatus();

    case ONBOARD_STATUS:
      return getOnboardStatus();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ACCOUNT_CODE:
      return isSetAccountCode();
    case COUNTRY_CODE:
      return isSetCountryCode();
    case ENTITY_TYPE:
      return isSetEntityType();
    case ACCOUNT_DATA:
      return isSetAccountData();
    case ONBOARDING_DATA:
      return isSetOnboardingData();
    case NAME:
      return isSetName();
    case CREATED_AT:
      return isSetCreatedAt();
    case UPDATED_AT:
      return isSetUpdatedAt();
    case ID:
      return isSetId();
    case VERSION:
      return isSetVersion();
    case ACCOUNT_CONFIG:
      return isSetAccountConfig();
    case EXTERNAL_ID_OBJECT:
      return isSetExternalIdObject();
    case CREATED_BY:
      return isSetCreatedBy();
    case UPDATED_BY:
      return isSetUpdatedBy();
    case DOCUMENT_DETAILS:
      return isSetDocumentDetails();
    case SELF_SIGN_UP:
      return isSetSelfSignUp();
    case STATUS:
      return isSetStatus();
    case ONBOARD_STATUS:
      return isSetOnboardStatus();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof TAccountObject)
      return this.equals((TAccountObject)that);
    return false;
  }

  public boolean equals(TAccountObject that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_accountCode = true && this.isSetAccountCode();
    boolean that_present_accountCode = true && that.isSetAccountCode();
    if (this_present_accountCode || that_present_accountCode) {
      if (!(this_present_accountCode && that_present_accountCode))
        return false;
      if (!this.accountCode.equals(that.accountCode))
        return false;
    }

    boolean this_present_countryCode = true && this.isSetCountryCode();
    boolean that_present_countryCode = true && that.isSetCountryCode();
    if (this_present_countryCode || that_present_countryCode) {
      if (!(this_present_countryCode && that_present_countryCode))
        return false;
      if (!this.countryCode.equals(that.countryCode))
        return false;
    }

    boolean this_present_entityType = true && this.isSetEntityType();
    boolean that_present_entityType = true && that.isSetEntityType();
    if (this_present_entityType || that_present_entityType) {
      if (!(this_present_entityType && that_present_entityType))
        return false;
      if (!this.entityType.equals(that.entityType))
        return false;
    }

    boolean this_present_accountData = true && this.isSetAccountData();
    boolean that_present_accountData = true && that.isSetAccountData();
    if (this_present_accountData || that_present_accountData) {
      if (!(this_present_accountData && that_present_accountData))
        return false;
      if (!this.accountData.equals(that.accountData))
        return false;
    }

    boolean this_present_onboardingData = true && this.isSetOnboardingData();
    boolean that_present_onboardingData = true && that.isSetOnboardingData();
    if (this_present_onboardingData || that_present_onboardingData) {
      if (!(this_present_onboardingData && that_present_onboardingData))
        return false;
      if (!this.onboardingData.equals(that.onboardingData))
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_createdAt = true;
    boolean that_present_createdAt = true;
    if (this_present_createdAt || that_present_createdAt) {
      if (!(this_present_createdAt && that_present_createdAt))
        return false;
      if (this.createdAt != that.createdAt)
        return false;
    }

    boolean this_present_updatedAt = true;
    boolean that_present_updatedAt = true;
    if (this_present_updatedAt || that_present_updatedAt) {
      if (!(this_present_updatedAt && that_present_updatedAt))
        return false;
      if (this.updatedAt != that.updatedAt)
        return false;
    }

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_version = true;
    boolean that_present_version = true;
    if (this_present_version || that_present_version) {
      if (!(this_present_version && that_present_version))
        return false;
      if (this.version != that.version)
        return false;
    }

    boolean this_present_accountConfig = true && this.isSetAccountConfig();
    boolean that_present_accountConfig = true && that.isSetAccountConfig();
    if (this_present_accountConfig || that_present_accountConfig) {
      if (!(this_present_accountConfig && that_present_accountConfig))
        return false;
      if (!this.accountConfig.equals(that.accountConfig))
        return false;
    }

    boolean this_present_externalIdObject = true && this.isSetExternalIdObject();
    boolean that_present_externalIdObject = true && that.isSetExternalIdObject();
    if (this_present_externalIdObject || that_present_externalIdObject) {
      if (!(this_present_externalIdObject && that_present_externalIdObject))
        return false;
      if (!this.externalIdObject.equals(that.externalIdObject))
        return false;
    }

    boolean this_present_createdBy = true && this.isSetCreatedBy();
    boolean that_present_createdBy = true && that.isSetCreatedBy();
    if (this_present_createdBy || that_present_createdBy) {
      if (!(this_present_createdBy && that_present_createdBy))
        return false;
      if (!this.createdBy.equals(that.createdBy))
        return false;
    }

    boolean this_present_updatedBy = true && this.isSetUpdatedBy();
    boolean that_present_updatedBy = true && that.isSetUpdatedBy();
    if (this_present_updatedBy || that_present_updatedBy) {
      if (!(this_present_updatedBy && that_present_updatedBy))
        return false;
      if (!this.updatedBy.equals(that.updatedBy))
        return false;
    }

    boolean this_present_documentDetails = true && this.isSetDocumentDetails();
    boolean that_present_documentDetails = true && that.isSetDocumentDetails();
    if (this_present_documentDetails || that_present_documentDetails) {
      if (!(this_present_documentDetails && that_present_documentDetails))
        return false;
      if (!this.documentDetails.equals(that.documentDetails))
        return false;
    }

    boolean this_present_selfSignUp = true && this.isSetSelfSignUp();
    boolean that_present_selfSignUp = true && that.isSetSelfSignUp();
    if (this_present_selfSignUp || that_present_selfSignUp) {
      if (!(this_present_selfSignUp && that_present_selfSignUp))
        return false;
      if (this.selfSignUp != that.selfSignUp)
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_onboardStatus = true && this.isSetOnboardStatus();
    boolean that_present_onboardStatus = true && that.isSetOnboardStatus();
    if (this_present_onboardStatus || that_present_onboardStatus) {
      if (!(this_present_onboardStatus && that_present_onboardStatus))
        return false;
      if (!this.onboardStatus.equals(that.onboardStatus))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetAccountCode()) ? 131071 : 524287);
    if (isSetAccountCode())
      hashCode = hashCode * 8191 + accountCode.hashCode();

    hashCode = hashCode * 8191 + ((isSetCountryCode()) ? 131071 : 524287);
    if (isSetCountryCode())
      hashCode = hashCode * 8191 + countryCode.getValue();

    hashCode = hashCode * 8191 + ((isSetEntityType()) ? 131071 : 524287);
    if (isSetEntityType())
      hashCode = hashCode * 8191 + entityType.getValue();

    hashCode = hashCode * 8191 + ((isSetAccountData()) ? 131071 : 524287);
    if (isSetAccountData())
      hashCode = hashCode * 8191 + accountData.hashCode();

    hashCode = hashCode * 8191 + ((isSetOnboardingData()) ? 131071 : 524287);
    if (isSetOnboardingData())
      hashCode = hashCode * 8191 + onboardingData.hashCode();

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(createdAt);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(updatedAt);

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(version);

    hashCode = hashCode * 8191 + ((isSetAccountConfig()) ? 131071 : 524287);
    if (isSetAccountConfig())
      hashCode = hashCode * 8191 + accountConfig.hashCode();

    hashCode = hashCode * 8191 + ((isSetExternalIdObject()) ? 131071 : 524287);
    if (isSetExternalIdObject())
      hashCode = hashCode * 8191 + externalIdObject.hashCode();

    hashCode = hashCode * 8191 + ((isSetCreatedBy()) ? 131071 : 524287);
    if (isSetCreatedBy())
      hashCode = hashCode * 8191 + createdBy.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdatedBy()) ? 131071 : 524287);
    if (isSetUpdatedBy())
      hashCode = hashCode * 8191 + updatedBy.hashCode();

    hashCode = hashCode * 8191 + ((isSetDocumentDetails()) ? 131071 : 524287);
    if (isSetDocumentDetails())
      hashCode = hashCode * 8191 + documentDetails.hashCode();

    hashCode = hashCode * 8191 + ((isSetSelfSignUp()) ? 131071 : 524287);
    if (isSetSelfSignUp())
      hashCode = hashCode * 8191 + ((selfSignUp) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetStatus()) ? 131071 : 524287);
    if (isSetStatus())
      hashCode = hashCode * 8191 + status.getValue();

    hashCode = hashCode * 8191 + ((isSetOnboardStatus()) ? 131071 : 524287);
    if (isSetOnboardStatus())
      hashCode = hashCode * 8191 + onboardStatus.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TAccountObject other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetAccountCode()).compareTo(other.isSetAccountCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountCode, other.accountCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCountryCode()).compareTo(other.isSetCountryCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCountryCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.countryCode, other.countryCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEntityType()).compareTo(other.isSetEntityType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEntityType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.entityType, other.entityType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAccountData()).compareTo(other.isSetAccountData());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountData()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountData, other.accountData);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOnboardingData()).compareTo(other.isSetOnboardingData());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOnboardingData()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.onboardingData, other.onboardingData);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreatedAt()).compareTo(other.isSetCreatedAt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreatedAt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createdAt, other.createdAt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUpdatedAt()).compareTo(other.isSetUpdatedAt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdatedAt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updatedAt, other.updatedAt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetVersion()).compareTo(other.isSetVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.version, other.version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAccountConfig()).compareTo(other.isSetAccountConfig());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountConfig()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountConfig, other.accountConfig);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExternalIdObject()).compareTo(other.isSetExternalIdObject());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExternalIdObject()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.externalIdObject, other.externalIdObject);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreatedBy()).compareTo(other.isSetCreatedBy());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreatedBy()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createdBy, other.createdBy);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUpdatedBy()).compareTo(other.isSetUpdatedBy());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdatedBy()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updatedBy, other.updatedBy);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDocumentDetails()).compareTo(other.isSetDocumentDetails());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDocumentDetails()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.documentDetails, other.documentDetails);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSelfSignUp()).compareTo(other.isSetSelfSignUp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSelfSignUp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.selfSignUp, other.selfSignUp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOnboardStatus()).compareTo(other.isSetOnboardStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOnboardStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.onboardStatus, other.onboardStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TAccountObject(");
    boolean first = true;

    sb.append("accountCode:");
    if (this.accountCode == null) {
      sb.append("null");
    } else {
      sb.append(this.accountCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("countryCode:");
    if (this.countryCode == null) {
      sb.append("null");
    } else {
      sb.append(this.countryCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("entityType:");
    if (this.entityType == null) {
      sb.append("null");
    } else {
      sb.append(this.entityType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("accountData:");
    if (this.accountData == null) {
      sb.append("null");
    } else {
      sb.append(this.accountData);
    }
    first = false;
    if (isSetOnboardingData()) {
      if (!first) sb.append(", ");
      sb.append("onboardingData:");
      if (this.onboardingData == null) {
        sb.append("null");
      } else {
        sb.append(this.onboardingData);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createdAt:");
    sb.append(this.createdAt);
    first = false;
    if (!first) sb.append(", ");
    sb.append("updatedAt:");
    sb.append(this.updatedAt);
    first = false;
    if (!first) sb.append(", ");
    sb.append("id:");
    if (this.id == null) {
      sb.append("null");
    } else {
      sb.append(this.id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("version:");
    sb.append(this.version);
    first = false;
    if (isSetAccountConfig()) {
      if (!first) sb.append(", ");
      sb.append("accountConfig:");
      if (this.accountConfig == null) {
        sb.append("null");
      } else {
        sb.append(this.accountConfig);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("externalIdObject:");
    if (this.externalIdObject == null) {
      sb.append("null");
    } else {
      sb.append(this.externalIdObject);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createdBy:");
    if (this.createdBy == null) {
      sb.append("null");
    } else {
      sb.append(this.createdBy);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("updatedBy:");
    if (this.updatedBy == null) {
      sb.append("null");
    } else {
      sb.append(this.updatedBy);
    }
    first = false;
    if (isSetDocumentDetails()) {
      if (!first) sb.append(", ");
      sb.append("documentDetails:");
      if (this.documentDetails == null) {
        sb.append("null");
      } else {
        sb.append(this.documentDetails);
      }
      first = false;
    }
    if (isSetSelfSignUp()) {
      if (!first) sb.append(", ");
      sb.append("selfSignUp:");
      sb.append(this.selfSignUp);
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("status:");
    if (this.status == null) {
      sb.append("null");
    } else {
      sb.append(this.status);
    }
    first = false;
    if (isSetOnboardStatus()) {
      if (!first) sb.append(", ");
      sb.append("onboardStatus:");
      if (this.onboardStatus == null) {
        sb.append("null");
      } else {
        sb.append(this.onboardStatus);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSetAccountCode()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'accountCode' is unset! Struct:" + toString());
    }

    if (!isSetCountryCode()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'countryCode' is unset! Struct:" + toString());
    }

    if (!isSetEntityType()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'entityType' is unset! Struct:" + toString());
    }

    if (!isSetAccountData()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'accountData' is unset! Struct:" + toString());
    }

    if (!isSetName()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'name' is unset! Struct:" + toString());
    }

    if (!isSetCreatedAt()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'createdAt' is unset! Struct:" + toString());
    }

    if (!isSetUpdatedAt()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'updatedAt' is unset! Struct:" + toString());
    }

    if (!isSetId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'id' is unset! Struct:" + toString());
    }

    if (!isSetVersion()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'version' is unset! Struct:" + toString());
    }

    if (!isSetExternalIdObject()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'externalIdObject' is unset! Struct:" + toString());
    }

    if (!isSetCreatedBy()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'createdBy' is unset! Struct:" + toString());
    }

    if (!isSetUpdatedBy()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'updatedBy' is unset! Struct:" + toString());
    }

    if (!isSetStatus()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'status' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (accountConfig != null) {
      accountConfig.validate();
    }
    if (externalIdObject != null) {
      externalIdObject.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TAccountObjectStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TAccountObjectStandardScheme getScheme() {
      return new TAccountObjectStandardScheme();
    }
  }

  private static class TAccountObjectStandardScheme extends org.apache.thrift.scheme.StandardScheme<TAccountObject> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TAccountObject struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ACCOUNT_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountCode = iprot.readString();
              struct.setAccountCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // COUNTRY_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.countryCode = com.oyo.mm.channel.accountmanagement.TCountryCode.findByValue(iprot.readI32());
              struct.setCountryCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ENTITY_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.entityType = com.oyo.mm.channel.accountmanagement.TEntityType.findByValue(iprot.readI32());
              struct.setEntityTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ACCOUNT_DATA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountData = iprot.readString();
              struct.setAccountDataIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ONBOARDING_DATA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.onboardingData = iprot.readString();
              struct.setOnboardingDataIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CREATED_AT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createdAt = iprot.readI64();
              struct.setCreatedAtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // UPDATED_AT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.updatedAt = iprot.readI64();
              struct.setUpdatedAtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.version = iprot.readI64();
              struct.setVersionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // ACCOUNT_CONFIG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.accountConfig = new TAccountConfig();
              struct.accountConfig.read(iprot);
              struct.setAccountConfigIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // EXTERNAL_ID_OBJECT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.externalIdObject = new TExternalIdObject();
              struct.externalIdObject.read(iprot);
              struct.setExternalIdObjectIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CREATED_BY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createdBy = iprot.readString();
              struct.setCreatedByIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // UPDATED_BY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updatedBy = iprot.readString();
              struct.setUpdatedByIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // DOCUMENT_DETAILS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map0 = iprot.readMapBegin();
                struct.documentDetails = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map0.size);
                java.lang.String _key1;
                java.lang.String _val2;
                for (int _i3 = 0; _i3 < _map0.size; ++_i3)
                {
                  _key1 = iprot.readString();
                  _val2 = iprot.readString();
                  struct.documentDetails.put(_key1, _val2);
                }
                iprot.readMapEnd();
              }
              struct.setDocumentDetailsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // SELF_SIGN_UP
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.selfSignUp = iprot.readBool();
              struct.setSelfSignUpIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = com.oyo.mm.channel.accountmanagement.TAccountStatus.findByValue(iprot.readI32());
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // ONBOARD_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map4 = iprot.readMapBegin();
                struct.onboardStatus = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map4.size);
                java.lang.String _key5;
                java.lang.String _val6;
                for (int _i7 = 0; _i7 < _map4.size; ++_i7)
                {
                  _key5 = iprot.readString();
                  _val6 = iprot.readString();
                  struct.onboardStatus.put(_key5, _val6);
                }
                iprot.readMapEnd();
              }
              struct.setOnboardStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TAccountObject struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.accountCode != null) {
        oprot.writeFieldBegin(ACCOUNT_CODE_FIELD_DESC);
        oprot.writeString(struct.accountCode);
        oprot.writeFieldEnd();
      }
      if (struct.countryCode != null) {
        oprot.writeFieldBegin(COUNTRY_CODE_FIELD_DESC);
        oprot.writeI32(struct.countryCode.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.entityType != null) {
        oprot.writeFieldBegin(ENTITY_TYPE_FIELD_DESC);
        oprot.writeI32(struct.entityType.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.accountData != null) {
        oprot.writeFieldBegin(ACCOUNT_DATA_FIELD_DESC);
        oprot.writeString(struct.accountData);
        oprot.writeFieldEnd();
      }
      if (struct.onboardingData != null) {
        if (struct.isSetOnboardingData()) {
          oprot.writeFieldBegin(ONBOARDING_DATA_FIELD_DESC);
          oprot.writeString(struct.onboardingData);
          oprot.writeFieldEnd();
        }
      }
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATED_AT_FIELD_DESC);
      oprot.writeI64(struct.createdAt);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(UPDATED_AT_FIELD_DESC);
      oprot.writeI64(struct.updatedAt);
      oprot.writeFieldEnd();
      if (struct.id != null) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeString(struct.id);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(VERSION_FIELD_DESC);
      oprot.writeI64(struct.version);
      oprot.writeFieldEnd();
      if (struct.accountConfig != null) {
        if (struct.isSetAccountConfig()) {
          oprot.writeFieldBegin(ACCOUNT_CONFIG_FIELD_DESC);
          struct.accountConfig.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.externalIdObject != null) {
        oprot.writeFieldBegin(EXTERNAL_ID_OBJECT_FIELD_DESC);
        struct.externalIdObject.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.createdBy != null) {
        oprot.writeFieldBegin(CREATED_BY_FIELD_DESC);
        oprot.writeString(struct.createdBy);
        oprot.writeFieldEnd();
      }
      if (struct.updatedBy != null) {
        oprot.writeFieldBegin(UPDATED_BY_FIELD_DESC);
        oprot.writeString(struct.updatedBy);
        oprot.writeFieldEnd();
      }
      if (struct.documentDetails != null) {
        if (struct.isSetDocumentDetails()) {
          oprot.writeFieldBegin(DOCUMENT_DETAILS_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.documentDetails.size()));
            for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter8 : struct.documentDetails.entrySet())
            {
              oprot.writeString(_iter8.getKey());
              oprot.writeString(_iter8.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetSelfSignUp()) {
        oprot.writeFieldBegin(SELF_SIGN_UP_FIELD_DESC);
        oprot.writeBool(struct.selfSignUp);
        oprot.writeFieldEnd();
      }
      if (struct.status != null) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeI32(struct.status.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.onboardStatus != null) {
        if (struct.isSetOnboardStatus()) {
          oprot.writeFieldBegin(ONBOARD_STATUS_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.onboardStatus.size()));
            for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter9 : struct.onboardStatus.entrySet())
            {
              oprot.writeString(_iter9.getKey());
              oprot.writeString(_iter9.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TAccountObjectTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TAccountObjectTupleScheme getScheme() {
      return new TAccountObjectTupleScheme();
    }
  }

  private static class TAccountObjectTupleScheme extends org.apache.thrift.scheme.TupleScheme<TAccountObject> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TAccountObject struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeString(struct.accountCode);
      oprot.writeI32(struct.countryCode.getValue());
      oprot.writeI32(struct.entityType.getValue());
      oprot.writeString(struct.accountData);
      oprot.writeString(struct.name);
      oprot.writeI64(struct.createdAt);
      oprot.writeI64(struct.updatedAt);
      oprot.writeString(struct.id);
      oprot.writeI64(struct.version);
      struct.externalIdObject.write(oprot);
      oprot.writeString(struct.createdBy);
      oprot.writeString(struct.updatedBy);
      oprot.writeI32(struct.status.getValue());
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetOnboardingData()) {
        optionals.set(0);
      }
      if (struct.isSetAccountConfig()) {
        optionals.set(1);
      }
      if (struct.isSetDocumentDetails()) {
        optionals.set(2);
      }
      if (struct.isSetSelfSignUp()) {
        optionals.set(3);
      }
      if (struct.isSetOnboardStatus()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetOnboardingData()) {
        oprot.writeString(struct.onboardingData);
      }
      if (struct.isSetAccountConfig()) {
        struct.accountConfig.write(oprot);
      }
      if (struct.isSetDocumentDetails()) {
        {
          oprot.writeI32(struct.documentDetails.size());
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter10 : struct.documentDetails.entrySet())
          {
            oprot.writeString(_iter10.getKey());
            oprot.writeString(_iter10.getValue());
          }
        }
      }
      if (struct.isSetSelfSignUp()) {
        oprot.writeBool(struct.selfSignUp);
      }
      if (struct.isSetOnboardStatus()) {
        {
          oprot.writeI32(struct.onboardStatus.size());
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter11 : struct.onboardStatus.entrySet())
          {
            oprot.writeString(_iter11.getKey());
            oprot.writeString(_iter11.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TAccountObject struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.accountCode = iprot.readString();
      struct.setAccountCodeIsSet(true);
      struct.countryCode = com.oyo.mm.channel.accountmanagement.TCountryCode.findByValue(iprot.readI32());
      struct.setCountryCodeIsSet(true);
      struct.entityType = com.oyo.mm.channel.accountmanagement.TEntityType.findByValue(iprot.readI32());
      struct.setEntityTypeIsSet(true);
      struct.accountData = iprot.readString();
      struct.setAccountDataIsSet(true);
      struct.name = iprot.readString();
      struct.setNameIsSet(true);
      struct.createdAt = iprot.readI64();
      struct.setCreatedAtIsSet(true);
      struct.updatedAt = iprot.readI64();
      struct.setUpdatedAtIsSet(true);
      struct.id = iprot.readString();
      struct.setIdIsSet(true);
      struct.version = iprot.readI64();
      struct.setVersionIsSet(true);
      struct.externalIdObject = new TExternalIdObject();
      struct.externalIdObject.read(iprot);
      struct.setExternalIdObjectIsSet(true);
      struct.createdBy = iprot.readString();
      struct.setCreatedByIsSet(true);
      struct.updatedBy = iprot.readString();
      struct.setUpdatedByIsSet(true);
      struct.status = com.oyo.mm.channel.accountmanagement.TAccountStatus.findByValue(iprot.readI32());
      struct.setStatusIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.onboardingData = iprot.readString();
        struct.setOnboardingDataIsSet(true);
      }
      if (incoming.get(1)) {
        struct.accountConfig = new TAccountConfig();
        struct.accountConfig.read(iprot);
        struct.setAccountConfigIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TMap _map12 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.documentDetails = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map12.size);
          java.lang.String _key13;
          java.lang.String _val14;
          for (int _i15 = 0; _i15 < _map12.size; ++_i15)
          {
            _key13 = iprot.readString();
            _val14 = iprot.readString();
            struct.documentDetails.put(_key13, _val14);
          }
        }
        struct.setDocumentDetailsIsSet(true);
      }
      if (incoming.get(3)) {
        struct.selfSignUp = iprot.readBool();
        struct.setSelfSignUpIsSet(true);
      }
      if (incoming.get(4)) {
        {
          org.apache.thrift.protocol.TMap _map16 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.onboardStatus = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map16.size);
          java.lang.String _key17;
          java.lang.String _val18;
          for (int _i19 = 0; _i19 < _map16.size; ++_i19)
          {
            _key17 = iprot.readString();
            _val18 = iprot.readString();
            struct.onboardStatus.put(_key17, _val18);
          }
        }
        struct.setOnboardStatusIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

