/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.oyo.mm.channel.accountmanagement;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2019-02-23")
public class TUpdateBillingAddressRequest implements org.apache.thrift.TBase<TUpdateBillingAddressRequest, TUpdateBillingAddressRequest._Fields>, java.io.Serializable, Cloneable, Comparable<TUpdateBillingAddressRequest> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TUpdateBillingAddressRequest");

  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField LIN_FIELD_DESC = new org.apache.thrift.protocol.TField("lin", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField IS_HEADQUATERS_FIELD_DESC = new org.apache.thrift.protocol.TField("isHeadquaters", org.apache.thrift.protocol.TType.BOOL, (short)3);
  private static final org.apache.thrift.protocol.TField BILLING_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("billingId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ACCOUNT_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("accountCode", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)6);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TUpdateBillingAddressRequestStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TUpdateBillingAddressRequestTupleSchemeFactory();

  private TAddressObject address; // required
  private java.lang.String lin; // required
  private boolean isHeadquaters; // required
  private java.lang.String billingId; // required
  private java.lang.String accountCode; // required
  private java.lang.String name; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ADDRESS((short)1, "address"),
    LIN((short)2, "lin"),
    IS_HEADQUATERS((short)3, "isHeadquaters"),
    BILLING_ID((short)4, "billingId"),
    ACCOUNT_CODE((short)5, "accountCode"),
    NAME((short)6, "name");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ADDRESS
          return ADDRESS;
        case 2: // LIN
          return LIN;
        case 3: // IS_HEADQUATERS
          return IS_HEADQUATERS;
        case 4: // BILLING_ID
          return BILLING_ID;
        case 5: // ACCOUNT_CODE
          return ACCOUNT_CODE;
        case 6: // NAME
          return NAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ISHEADQUATERS_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.NAME};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TAddressObject.class)));
    tmpMap.put(_Fields.LIN, new org.apache.thrift.meta_data.FieldMetaData("lin", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_HEADQUATERS, new org.apache.thrift.meta_data.FieldMetaData("isHeadquaters", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.BILLING_ID, new org.apache.thrift.meta_data.FieldMetaData("billingId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCOUNT_CODE, new org.apache.thrift.meta_data.FieldMetaData("accountCode", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TUpdateBillingAddressRequest.class, metaDataMap);
  }

  public TUpdateBillingAddressRequest() {
  }

  public TUpdateBillingAddressRequest(
    TAddressObject address,
    java.lang.String lin,
    boolean isHeadquaters,
    java.lang.String billingId,
    java.lang.String accountCode)
  {
    this();
    this.address = address;
    this.lin = lin;
    this.isHeadquaters = isHeadquaters;
    setIsHeadquatersIsSet(true);
    this.billingId = billingId;
    this.accountCode = accountCode;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TUpdateBillingAddressRequest(TUpdateBillingAddressRequest other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetAddress()) {
      this.address = new TAddressObject(other.address);
    }
    if (other.isSetLin()) {
      this.lin = other.lin;
    }
    this.isHeadquaters = other.isHeadquaters;
    if (other.isSetBillingId()) {
      this.billingId = other.billingId;
    }
    if (other.isSetAccountCode()) {
      this.accountCode = other.accountCode;
    }
    if (other.isSetName()) {
      this.name = other.name;
    }
  }

  public TUpdateBillingAddressRequest deepCopy() {
    return new TUpdateBillingAddressRequest(this);
  }

  @Override
  public void clear() {
    this.address = null;
    this.lin = null;
    setIsHeadquatersIsSet(false);
    this.isHeadquaters = false;
    this.billingId = null;
    this.accountCode = null;
    this.name = null;
  }

  public TAddressObject getAddress() {
    return this.address;
  }

  public void setAddress(TAddressObject address) {
    this.address = address;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  public java.lang.String getLin() {
    return this.lin;
  }

  public void setLin(java.lang.String lin) {
    this.lin = lin;
  }

  public void unsetLin() {
    this.lin = null;
  }

  /** Returns true if field lin is set (has been assigned a value) and false otherwise */
  public boolean isSetLin() {
    return this.lin != null;
  }

  public void setLinIsSet(boolean value) {
    if (!value) {
      this.lin = null;
    }
  }

  public boolean isIsHeadquaters() {
    return this.isHeadquaters;
  }

  public void setIsHeadquaters(boolean isHeadquaters) {
    this.isHeadquaters = isHeadquaters;
    setIsHeadquatersIsSet(true);
  }

  public void unsetIsHeadquaters() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISHEADQUATERS_ISSET_ID);
  }

  /** Returns true if field isHeadquaters is set (has been assigned a value) and false otherwise */
  public boolean isSetIsHeadquaters() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISHEADQUATERS_ISSET_ID);
  }

  public void setIsHeadquatersIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISHEADQUATERS_ISSET_ID, value);
  }

  public java.lang.String getBillingId() {
    return this.billingId;
  }

  public void setBillingId(java.lang.String billingId) {
    this.billingId = billingId;
  }

  public void unsetBillingId() {
    this.billingId = null;
  }

  /** Returns true if field billingId is set (has been assigned a value) and false otherwise */
  public boolean isSetBillingId() {
    return this.billingId != null;
  }

  public void setBillingIdIsSet(boolean value) {
    if (!value) {
      this.billingId = null;
    }
  }

  public java.lang.String getAccountCode() {
    return this.accountCode;
  }

  public void setAccountCode(java.lang.String accountCode) {
    this.accountCode = accountCode;
  }

  public void unsetAccountCode() {
    this.accountCode = null;
  }

  /** Returns true if field accountCode is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountCode() {
    return this.accountCode != null;
  }

  public void setAccountCodeIsSet(boolean value) {
    if (!value) {
      this.accountCode = null;
    }
  }

  public java.lang.String getName() {
    return this.name;
  }

  public void setName(java.lang.String name) {
    this.name = name;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((TAddressObject)value);
      }
      break;

    case LIN:
      if (value == null) {
        unsetLin();
      } else {
        setLin((java.lang.String)value);
      }
      break;

    case IS_HEADQUATERS:
      if (value == null) {
        unsetIsHeadquaters();
      } else {
        setIsHeadquaters((java.lang.Boolean)value);
      }
      break;

    case BILLING_ID:
      if (value == null) {
        unsetBillingId();
      } else {
        setBillingId((java.lang.String)value);
      }
      break;

    case ACCOUNT_CODE:
      if (value == null) {
        unsetAccountCode();
      } else {
        setAccountCode((java.lang.String)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ADDRESS:
      return getAddress();

    case LIN:
      return getLin();

    case IS_HEADQUATERS:
      return isIsHeadquaters();

    case BILLING_ID:
      return getBillingId();

    case ACCOUNT_CODE:
      return getAccountCode();

    case NAME:
      return getName();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ADDRESS:
      return isSetAddress();
    case LIN:
      return isSetLin();
    case IS_HEADQUATERS:
      return isSetIsHeadquaters();
    case BILLING_ID:
      return isSetBillingId();
    case ACCOUNT_CODE:
      return isSetAccountCode();
    case NAME:
      return isSetName();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof TUpdateBillingAddressRequest)
      return this.equals((TUpdateBillingAddressRequest)that);
    return false;
  }

  public boolean equals(TUpdateBillingAddressRequest that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_lin = true && this.isSetLin();
    boolean that_present_lin = true && that.isSetLin();
    if (this_present_lin || that_present_lin) {
      if (!(this_present_lin && that_present_lin))
        return false;
      if (!this.lin.equals(that.lin))
        return false;
    }

    boolean this_present_isHeadquaters = true;
    boolean that_present_isHeadquaters = true;
    if (this_present_isHeadquaters || that_present_isHeadquaters) {
      if (!(this_present_isHeadquaters && that_present_isHeadquaters))
        return false;
      if (this.isHeadquaters != that.isHeadquaters)
        return false;
    }

    boolean this_present_billingId = true && this.isSetBillingId();
    boolean that_present_billingId = true && that.isSetBillingId();
    if (this_present_billingId || that_present_billingId) {
      if (!(this_present_billingId && that_present_billingId))
        return false;
      if (!this.billingId.equals(that.billingId))
        return false;
    }

    boolean this_present_accountCode = true && this.isSetAccountCode();
    boolean that_present_accountCode = true && that.isSetAccountCode();
    if (this_present_accountCode || that_present_accountCode) {
      if (!(this_present_accountCode && that_present_accountCode))
        return false;
      if (!this.accountCode.equals(that.accountCode))
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetAddress()) ? 131071 : 524287);
    if (isSetAddress())
      hashCode = hashCode * 8191 + address.hashCode();

    hashCode = hashCode * 8191 + ((isSetLin()) ? 131071 : 524287);
    if (isSetLin())
      hashCode = hashCode * 8191 + lin.hashCode();

    hashCode = hashCode * 8191 + ((isHeadquaters) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetBillingId()) ? 131071 : 524287);
    if (isSetBillingId())
      hashCode = hashCode * 8191 + billingId.hashCode();

    hashCode = hashCode * 8191 + ((isSetAccountCode()) ? 131071 : 524287);
    if (isSetAccountCode())
      hashCode = hashCode * 8191 + accountCode.hashCode();

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TUpdateBillingAddressRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLin()).compareTo(other.isSetLin());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLin()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lin, other.lin);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIsHeadquaters()).compareTo(other.isSetIsHeadquaters());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsHeadquaters()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isHeadquaters, other.isHeadquaters);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBillingId()).compareTo(other.isSetBillingId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBillingId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.billingId, other.billingId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAccountCode()).compareTo(other.isSetAccountCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountCode, other.accountCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TUpdateBillingAddressRequest(");
    boolean first = true;

    sb.append("address:");
    if (this.address == null) {
      sb.append("null");
    } else {
      sb.append(this.address);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("lin:");
    if (this.lin == null) {
      sb.append("null");
    } else {
      sb.append(this.lin);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("isHeadquaters:");
    sb.append(this.isHeadquaters);
    first = false;
    if (!first) sb.append(", ");
    sb.append("billingId:");
    if (this.billingId == null) {
      sb.append("null");
    } else {
      sb.append(this.billingId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("accountCode:");
    if (this.accountCode == null) {
      sb.append("null");
    } else {
      sb.append(this.accountCode);
    }
    first = false;
    if (isSetName()) {
      if (!first) sb.append(", ");
      sb.append("name:");
      if (this.name == null) {
        sb.append("null");
      } else {
        sb.append(this.name);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSetAddress()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'address' is unset! Struct:" + toString());
    }

    if (!isSetLin()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'lin' is unset! Struct:" + toString());
    }

    if (!isSetIsHeadquaters()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'isHeadquaters' is unset! Struct:" + toString());
    }

    if (!isSetBillingId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'billingId' is unset! Struct:" + toString());
    }

    if (!isSetAccountCode()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'accountCode' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (address != null) {
      address.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TUpdateBillingAddressRequestStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TUpdateBillingAddressRequestStandardScheme getScheme() {
      return new TUpdateBillingAddressRequestStandardScheme();
    }
  }

  private static class TUpdateBillingAddressRequestStandardScheme extends org.apache.thrift.scheme.StandardScheme<TUpdateBillingAddressRequest> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TUpdateBillingAddressRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.address = new TAddressObject();
              struct.address.read(iprot);
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // LIN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.lin = iprot.readString();
              struct.setLinIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // IS_HEADQUATERS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isHeadquaters = iprot.readBool();
              struct.setIsHeadquatersIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // BILLING_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.billingId = iprot.readString();
              struct.setBillingIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ACCOUNT_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountCode = iprot.readString();
              struct.setAccountCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TUpdateBillingAddressRequest struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.address != null) {
        oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
        struct.address.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.lin != null) {
        oprot.writeFieldBegin(LIN_FIELD_DESC);
        oprot.writeString(struct.lin);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(IS_HEADQUATERS_FIELD_DESC);
      oprot.writeBool(struct.isHeadquaters);
      oprot.writeFieldEnd();
      if (struct.billingId != null) {
        oprot.writeFieldBegin(BILLING_ID_FIELD_DESC);
        oprot.writeString(struct.billingId);
        oprot.writeFieldEnd();
      }
      if (struct.accountCode != null) {
        oprot.writeFieldBegin(ACCOUNT_CODE_FIELD_DESC);
        oprot.writeString(struct.accountCode);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        if (struct.isSetName()) {
          oprot.writeFieldBegin(NAME_FIELD_DESC);
          oprot.writeString(struct.name);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TUpdateBillingAddressRequestTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TUpdateBillingAddressRequestTupleScheme getScheme() {
      return new TUpdateBillingAddressRequestTupleScheme();
    }
  }

  private static class TUpdateBillingAddressRequestTupleScheme extends org.apache.thrift.scheme.TupleScheme<TUpdateBillingAddressRequest> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TUpdateBillingAddressRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.address.write(oprot);
      oprot.writeString(struct.lin);
      oprot.writeBool(struct.isHeadquaters);
      oprot.writeString(struct.billingId);
      oprot.writeString(struct.accountCode);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetName()) {
        optionals.set(0);
      }
      oprot.writeBitSet(optionals, 1);
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TUpdateBillingAddressRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.address = new TAddressObject();
      struct.address.read(iprot);
      struct.setAddressIsSet(true);
      struct.lin = iprot.readString();
      struct.setLinIsSet(true);
      struct.isHeadquaters = iprot.readBool();
      struct.setIsHeadquatersIsSet(true);
      struct.billingId = iprot.readString();
      struct.setBillingIdIsSet(true);
      struct.accountCode = iprot.readString();
      struct.setAccountCodeIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(1);
      if (incoming.get(0)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

